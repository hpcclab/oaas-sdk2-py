name: Build oaas-sdk2 single-file runner image

on:
  # Run this workflow after CI completes (so wheels/sdist are released to PyPI)
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: read
  packages: write

jobs:
  docker:
    # Only proceed if CI succeeded and the CI run was for a v* tag
    if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.event.workflow_run.head_branch, 'v') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout triggering commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
          fetch-tags: true

      - name: Determine tag and version
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ github.event.workflow_run.head_branch }}"
          if [[ ! "$TAG" =~ ^v[0-9] ]]; then
            echo "This run is not for a v* tag; exiting."
            echo "build_enabled=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          VERSION="${TAG#v}"
          SHORT_SHA="$(git rev-parse --short=7 HEAD)"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "short_sha=${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "build_enabled=true" >> "$GITHUB_OUTPUT"

      - name: Wait for PyPI availability (oaas-sdk2-py ${{ steps.vars.outputs.version }})
        if: ${{ steps.vars.outputs.build_enabled == 'true' }}
        shell: bash
        run: |
          set -euo pipefail
          ver='${{ steps.vars.outputs.version }}'
          echo "Waiting for PyPI to serve oaas-sdk2-py==${ver}..."
          for i in {1..60}; do
            if curl -fsSL "https://pypi.org/pypi/oaas-sdk2-py/${ver}/json" >/dev/null; then
              echo "Found on PyPI. Giving CDN a little extra time..."
              sleep 15
              break
            fi
            echo "Not available yet (attempt $i). Sleeping 5s..."
            sleep 5
          done

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        if: ${{ steps.vars.outputs.build_enabled == 'true' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/oaas-sdk2-py-runner
          tags: |
            type=raw,value=${{ steps.vars.outputs.tag }}
            type=raw,value=sha-${{ steps.vars.outputs.short_sha }}

      - name: Log in to GitHub Container Registry
        if: ${{ steps.vars.outputs.build_enabled == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ steps.vars.outputs.build_enabled == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: ./deploy
          file: ./deploy/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OAAS_SDK2_PY_VERSION=${{ steps.vars.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
