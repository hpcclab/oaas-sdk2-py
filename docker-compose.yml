services:


  odgm:
    # network_mode: host
    image: ghcr.io/pawissanutt/oaas-rs/odgm
    ports:
      - "10001:10001"
      - "17447:17447"
    environment:
      ODGM_LOG: DEBUG,openraft=info,h2=warn
      ODGM_HTTP_PORT: 10001
      OPRC_ZENOH_PORT: 17447
      ODGM_MAX_SESSIONS: 1
      ODGM_NODE_ID: 1
      OPRC_ZENOH_PEERS: tcp/router:7447
      ODGM_COLLECTION: |
        [
          {"name":"example.hello","partition_count":1,"replica_count":1,"shard_assignments":[{"primary": 1, "replica":[1],"shard_ids":[1]}], 
            "invocations": {
              "fn_routes": {
                "new": {"url":"http://hello-fn:8080", "stateless": true, "standby": false, "active_group":[]},
                "greet": {"url":"http://hello-fn:8080", "stateless": false, "standby": false, "active_group":[]},
                "echo": {"url":"http://hello-fn:8080", "stateless": true, "standby": false, "active_group":[]}
              }
            },
            "shard_type":"basic","options":{}
          },
          {"name":"example.record","partition_count":1,"replica_count":1,"shard_assignments":[{"primary": 1, "replica":[1],"shard_ids":[2]}], 
            "invocations": {
              "fn_routes": {
                "random": {"url":"http://hello-fn:8080", "stateless": false, "standby": false, "active_group":[]}
              }
            },
            "shard_type":"basic","options":{}
          }
        ]

  router:
    deploy:
      replicas: 1
    image: ghcr.io/pawissanutt/oaas-rs/router
    # network_mode: "host"
    ports:
      - "7447:7447"
    environment:
      OPRC_LOG: "INFO"
      OPRC_ZENOH_PORT: "7447"


  
  hello-fn:
    build:
      context: .
      dockerfile: deploy/Dockerfile
    ports:
      - "10002:8080"
    environment:
      OPRC_ODGM_URL: http://odgm:10001
      OPRC_ZENOH_PEERS: tcp/router:7447
      LOG_LEVEL: DEBUG
      RUST_LOG: info
      APP_DIR: /app/helloworld
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_SERVICE_NAME: hello-fn
    volumes:
      - ./examples/helloworld:/app/helloworld
    

  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    restart: unless-stopped
    # environment:
    #   - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"      # Jaeger UI
      - "14250:14250"
      - "14268:14268"
      - "14270:14270"
      - "6831:6831/udp"
      # - "4317:4317"   

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    command: ["-config.file=/etc/loki/config.yml"]
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./deploy/loki-config.yml:/etc/loki/config.yml:ro

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.104.0
    container_name: otel-collector
    command: ["--config=/etc/otelcol/config.yaml"]
    ports:
      - "4317:4317"  # OTLP gRPC ingest
      - "4318:4318"  # OTLP HTTP ingest
    volumes:
      - ./deploy/otel-collector-config.yml:/etc/otelcol/config.yaml:ro
    depends_on:
      - jaeger
      - loki
  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - loki

volumes:
  loki-data: {}
  grafana-data: {}
